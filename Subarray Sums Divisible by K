class Solution {
public:
    int subarraysDivByK(vector<int>& nums, int k) {
        if(nums.size()  == 1) return nums[0]%k == 0;
        map<int,int>mpp;
        mpp[0] = 1;
        int ans = 0, sum = 0;
        for(int i = 0;i<nums.size();i++){
            sum+=nums[i];
            int rem = (sum%k + k)%k;       
            if(mpp.find(rem) != mpp.end()){
                ans+=mpp[rem];
            }
                mpp[rem]++;
            
        }
        return ans;
    }
};
// Question Link:- https://leetcode.com/problems/subarray-sums-divisible-by-k/
